{
    "CNPM": [
        {
            "question": "Thiết kế phần mềm là gì?",
            "options": [
                "Quá trình viết mã nguồn",
                "Quá trình xác định các thành phần phần mềm và mỗi liên kết giữa chúng dựa trên yêu cầu của khách hàng",
                "Quá trình kiểm thử phần mềm",
                "Quá trình bảo trì phần mềm"
            ],
            "correctAnswer": "Quá trình xác định các thành phần phần mềm và mỗi liên kết giữa chúng dựa trên yêu cầu của khách hàng"
        },
        {
            "question": "Hiện thực phần mềm là gì?",
            "options": [
                "Quá trình kiểm thử phần mềm",
                "Quá trình hiện thực hóa thiết kế thành chương trình",
                "Quá trình viết tài liệu hướng dẫn",
                "Quá trình bảo trì phần mềm"
            ],
            "correctAnswer": "Quá trình hiện thực hóa thiết kế thành chương trình"
        },
        {
            "question": "Thiết kế và hiện thực phần mềm là hai hoạt động như thế nào?",
            "options": [
                "Tách biệt hoàn toàn",
                "Đan xen lẫn nhau",
                "Hoàn toàn độc lập",
                "Không liên quan đến nhau"
            ],
            "correctAnswer": "Đan xen lẫn nhau"
        },
        {
            "question": "Thiết kế hướng đối tượng sử dụng gì để biểu diễn?",
            "options": ["UML", "SQL", "HTML", "XML"],
            "correctAnswer": "UML"
        },
        {
            "question": "Thiết kế mẫu là gì?",
            "options": [
                "Một phương pháp lập trình",
                "Một phương pháp thiết kế giao diện người dùng",
                "Một phương pháp để giải quyết các vấn đề thiết kế thường gặp",
                "Một phương pháp kiểm thử phần mềm"
            ],
            "correctAnswer": "Một phương pháp để giải quyết các vấn đề thiết kế thường gặp"
        },
        {
            "question": "Phát triển mã nguồn mở liên quan đến gì?",
            "options": [
                "Sử dụng phần mềm đóng gói",
                "Sử dụng và phát triển các thành phần mã nguồn mở",
                "Thiết kế giao diện người dùng",
                "Quản lý dự án phần mềm"
            ],
            "correctAnswer": "Sử dụng và phát triển các thành phần mã nguồn mở"
        },
        {
            "question": "Một trong những nguyên tắc chính trong thiết kế giao diện người dùng là gì?",
            "options": [
                "Tối ưu hóa cho các thiết bị di động",
                "Tính đến nhu cầu, kinh nghiệm và khả năng của người dùng hệ thống",
                "Tăng tốc độ phát triển phần mềm",
                "Giảm chi phí phát triển"
            ],
            "correctAnswer": "Tính đến nhu cầu, kinh nghiệm và khả năng của người dùng hệ thống"
        },
        {
            "question": "Thiết kế UI cần nhận thức được điều gì?",
            "options": [
                "Các hạn chế về tài chính của dự án",
                "Các hạn chế về vật lý và tinh thần của người dùng",
                "Các công nghệ mới nhất",
                "Các yêu cầu chức năng của hệ thống"
            ],
            "correctAnswer": "Các hạn chế về vật lý và tinh thần của người dùng"
        },
        {
            "question": "Các mô hình thiết kế hệ thống có vai trò gì trong dự án lớn?",
            "options": [
                "Giảm thời gian phát triển",
                "Là cơ chế giao tiếp quan trọng giữa các nhóm thiết kế khác nhau",
                "Tăng chi phí dự án",
                "Giảm số lượng lỗi phần mềm"
            ],
            "correctAnswer": "Là cơ chế giao tiếp quan trọng giữa các nhóm thiết kế khác nhau"
        },
        {
            "question": "Thiết kế thuật toán là gì?",
            "options": [
                "Quá trình thiết kế giao diện người dùng",
                "Quá trình thiết kế các thuật toán để giải quyết các vấn đề cụ thể",
                "Quá trình viết mã nguồn",
                "Quá trình kiểm thử phần mềm"
            ],
            "correctAnswer": "Quá trình thiết kế các thuật toán để giải quyết các vấn đề cụ thể"
        },
        {
            "question": "Thiết kế cơ sở dữ liệu liên quan đến điều gì?",
            "options": [
                "Thiết kế giao diện người dùng",
                "Thiết kế cấu trúc và tổ chức của cơ sở dữ liệu",
                "Thiết kế các thuật toán",
                "Kiểm thử cơ sở dữ liệu"
            ],
            "correctAnswer": "Thiết kế cấu trúc và tổ chức của cơ sở dữ liệu"
        },
        {
            "question": "Trong thiết kế giao diện người dùng, cần thừa nhận điều gì?",
            "options": [
                "Người dùng luôn biết cách sử dụng hệ thống",
                "Ai cũng có thể nhầm lẫn",
                "Hệ thống không bao giờ gặp lỗi",
                "Giao diện không cần thân thiện"
            ],
            "correctAnswer": "Ai cũng có thể nhầm lẫn"
        },
        {
            "question": "Mục tiêu chính của thiết kế giao diện người dùng là gì?",
            "options": [
                "Tăng tốc độ phát triển phần mềm",
                "Đáp ứng nhu cầu và trải nghiệm người dùng",
                "Giảm chi phí phát triển",
                "Tăng tính bảo mật của hệ thống"
            ],
            "correctAnswer": "Đáp ứng nhu cầu và trải nghiệm người dùng"
        },
        {
            "question": "Quá trình thiết kế phần mềm bao gồm gì?",
            "options": [
                "Viết mã nguồn",
                "Định nghĩa các thành phần phần mềm và mối liên kết giữa chúng",
                "Kiểm thử phần mềm",
                "Bảo trì phần mềm"
            ],
            "correctAnswer": "Định nghĩa các thành phần phần mềm và mối liên kết giữa chúng"
        },
        {
            "question": "Một ví dụ về biểu đồ hoạt động trong thiết kế phần mềm là gì?",
            "options": [
                "Biểu đồ lớp",
                "Biểu đồ liên kết",
                "Biểu đồ hoạt động swimming lane",
                "Biểu đồ thành phần"
            ],
            "correctAnswer": "Biểu đồ hoạt động swimming lane"
        },
        {
            "question": "Quản lý bản quyền trong thiết kế phần mềm liên quan đến điều gì?",
            "options": [
                "Sử dụng các thành phần mã nguồn mở mà không cần kiểm tra",
                "Duy trì thông tin về các thành phần mã nguồn mở đã tải về và sử dụng",
                "Thiết kế giao diện người dùng",
                "Bảo trì phần mềm"
            ],
            "correctAnswer": "Duy trì thông tin về các thành phần mã nguồn mở đã tải về và sử dụng"
        },
        {
            "question": "Một trong những nguyên tắc quan trọng trong thiết kế phần mềm là gì?",
            "options": [
                "Giảm thiểu số lượng mã nguồn",
                "Đảm bảo phần mềm dễ dàng bảo trì và mở rộng",
                "Tăng số lượng thành phần phần mềm",
                "Giảm thiểu tài liệu hướng dẫn"
            ],
            "correctAnswer": "Đảm bảo phần mềm dễ dàng bảo trì và mở rộng"
        },
        {
            "question": "Thiết kế cơ sở dữ liệu bao gồm việc gì?",
            "options": [
                "Xác định cấu trúc dữ liệu và cách tổ chức dữ liệu trong cơ sở dữ liệu",
                "Viết mã nguồn",
                "Thiết kế giao diện người dùng",
                "Kiểm thử cơ sở dữ liệu"
            ],
            "correctAnswer": "Xác định cấu trúc dữ liệu và cách tổ chức dữ liệu trong cơ sở dữ liệu"
        },
        {
            "question": "Thiết kế thuật toán có vai trò gì trong phần mềm?",
            "options": [
                "Định nghĩa các giao diện người dùng",
                "Giải quyết các vấn đề cụ thể bằng cách xác định các bước xử lý",
                "Tăng tốc độ phát triển phần mềm",
                "Bảo trì phần mềm"
            ],
            "correctAnswer": "Giải quyết các vấn đề cụ thể bằng cách xác định các bước xử lý"
        },
        {
            "question": "Mục đích của việc hiện thực phần mềm là gì?",
            "options": [
                "Đáp ứng các yêu cầu thiết kế chi tiết",
                "Thỏa mãn người dùng cuối",
                "Tăng tính phức tạp của mã nguồn",
                "Giảm chi phí phát triển"
            ],
            "correctAnswer": "Đáp ứng các yêu cầu thiết kế chi tiết"
        },
        {
            "question": "Unit Implementation được hiểu là gì?",
            "options": [
                "Lập trình các đơn vị phần mềm nhỏ nhất",
                "Thiết kế giao diện người dùng",
                "Tạo lập các tài liệu hướng dẫn sử dụng",
                "Kiểm tra và bảo trì phần mềm"
            ],
            "correctAnswer": "Lập trình các đơn vị phần mềm nhỏ nhất"
        },
        {
            "question": "Một quy tắc vàng trong hiện thực phần mềm là gì?",
            "options": [
                "Kiểm tra các yêu cầu và thiết kế lại một lần nữa",
                "Không cần kiểm tra lại thiết kế sau khi mã hóa",
                "Tập trung vào việc lập trình nhanh chóng",
                "Đơn giản hóa tất cả các quy trình"
            ],
            "correctAnswer": "Kiểm tra các yêu cầu và thiết kế lại một lần nữa"
        },
        {
            "question": "Tại sao cần xác nhận các thiết kế chi tiết trước khi hiện thực?",
            "options": [
                "Để đảm bảo các thiết kế đáp ứng yêu cầu của người dùng",
                "Để giảm chi phí phát triển",
                "Để tiết kiệm thời gian kiểm thử",
                "Để tăng tốc độ mã hóa"
            ],
            "correctAnswer": "Để đảm bảo các thiết kế đáp ứng yêu cầu của người dùng"
        },
        {
            "question": "Mục đích của việc ghi lại lỗi khi sử dụng form là gì?",
            "options": [
                "Để theo dõi và sửa chữa lỗi một cách hệ thống",
                "Để lưu trữ dữ liệu người dùng",
                "Để tăng tốc độ phát triển phần mềm",
                "Để phân tích thị trường"
            ],
            "correctAnswer": "Để theo dõi và sửa chữa lỗi một cách hệ thống"
        },
        {
            "question": "Tiêu chuẩn yêu cầu đối với việc mã hóa bao gồm gì?",
            "options": [
                "Tính đúng đắn và rõ ràng",
                "Tính linh hoạt và tiết kiệm",
                "Tính đơn giản và nhanh chóng",
                "Tính bảo mật và khả năng mở rộng"
            ],
            "correctAnswer": "Tính đúng đắn và rõ ràng"
        },
        {
            "question": "Ước lượng kích thước và thời gian dựa trên gì?",
            "options": [
                "Dữ liệu đã có",
                "Kinh nghiệm cá nhân",
                "Yêu cầu khách hàng",
                "Ngân sách dự án"
            ],
            "correctAnswer": "Dữ liệu đã có"
        },
        {
            "question": "Hiện thực mã chương trình bao gồm bước nào sau đây?",
            "options": [
                "Lập kế hoạch cấu trúc và thiết kế mã",
                "Thiết kế giao diện người dùng",
                "Viết tài liệu hướng dẫn",
                "Tạo lập báo cáo phân tích"
            ],
            "correctAnswer": "Lập kế hoạch cấu trúc và thiết kế mã"
        },
        {
            "question": "Tại sao cần tự kiểm tra lại thiết kế/cấu trúc trước khi mã hóa?",
            "options": [
                "Để đảm bảo tính đúng đắn và hiệu quả của mã nguồn",
                "Để tăng tốc độ mã hóa",
                "Để giảm chi phí phát triển",
                "Để làm hài lòng khách hàng"
            ],
            "correctAnswer": "Để đảm bảo tính đúng đắn và hiệu quả của mã nguồn"
        },
        {
            "question": "Quy tắc đặt tên trong hiện thực mã chương trình cần tuân thủ những gì?",
            "options": [
                "Phù hợp và rõ ràng",
                "Ngắn gọn và xúc tích",
                "Phức tạp và chi tiết",
                "Bất kỳ tên nào cũng được"
            ],
            "correctAnswer": "Phù hợp và rõ ràng"
        },
        {
            "question": "Kiểm tra Class cần xem xét điều gì?",
            "options": [
                "Tên Class có thích hợp không",
                "Class có được trừu tượng không",
                "Header của Class có mô tả mục đích của hàm hay không",
                "Tất cả các ý trên"
            ],
            "correctAnswer": "Tất cả các ý trên"
        },
        {
            "question": "Kiểm tra thuộc tính cần xác định điều gì?",
            "options": [
                "Thuộc tính có cần thiết không",
                "Thuộc tính có thể là static không",
                "Thuộc tính có nên là final không",
                "Tất cả các ý trên"
            ],
            "correctAnswer": "Tất cả các ý trên"
        },
        {
            "question": "Phương pháp kiểm tra phương thức khai dụng cần xác định điều gì?",
            "options": [
                "Phương thức có cần thiết không",
                "Phương thức có leverage các constructor hiện có không",
                "Phương thức có initialize tất cả các thuộc tính không",
                "Tất cả các ý trên"
            ],
            "correctAnswer": "Tất cả các ý trên"
        },
        {
            "question": "Làm thế nào để lập trình 1000 LoC/ngày?",
            "options": [
                "Lập kế hoạch cấu trúc và thiết kế mã chương trình",
                "Tăng tốc độ đánh máy",
                "Tập trung vào các yêu cầu của khách hàng",
                "Giảm thời gian kiểm tra mã"
            ],
            "correctAnswer": "Lập kế hoạch cấu trúc và thiết kế mã chương trình"
        },
        {
            "question": "Kiểm tra thuộc tính có cần xác định điều gì?",
            "options": [
                "Sự cần thiết của thuộc tính",
                "Thuộc tính có thể là static hay không",
                "Thuộc tính có nên là final hay không",
                "Tất cả các ý trên"
            ],
            "correctAnswer": "Tất cả các ý trên"
        },
        {
            "question": "Tại sao cần ghi chú lại các mốc thời gian trong quá trình hiện thực mã chương trình?",
            "options": [
                "Để theo dõi tiến độ và quản lý thời gian hiệu quả",
                "Để lưu trữ dữ liệu người dùng",
                "Để phân tích thị trường",
                "Để giảm chi phí phát triển"
            ],
            "correctAnswer": "Để theo dõi tiến độ và quản lý thời gian hiệu quả"
        },
        {
            "question": "Việc chuẩn bị để hiện thực bao gồm gì?",
            "options": [
                "Xác nhận các thiết kế chi tiết phải hiện thực",
                "Mã hóa từ một thiết kế được mô tả bằng văn bản",
                "Đo thời gian phân loại theo các bước",
                "Tất cả các ý trên"
            ],
            "correctAnswer": "Tất cả các ý trên"
        },
        {
            "question": "Mục đích của việc biên dịch mã lệnh là gì?",
            "options": [
                "Kiểm tra và sửa chữa các lỗi cú pháp",
                "Thiết kế giao diện người dùng",
                "Viết tài liệu hướng dẫn",
                "Tạo lập báo cáo phân tích"
            ],
            "correctAnswer": "Kiểm tra và sửa chữa các lỗi cú pháp"
        },
        {
            "question": "Mục tiêu của kiểm thử phần mềm là gì?",
            "options": [
                "Để chỉ ra rằng chương trình thực hiện đúng như mong đợi và tìm ra lỗi",
                "Để giảm chi phí phát triển",
                "Để tăng tốc độ lập trình",
                "Để làm hài lòng khách hàng"
            ],
            "correctAnswer": "Để chỉ ra rằng chương trình thực hiện đúng như mong đợi và tìm ra lỗi"
        },
        {
            "question": "Kiểm thử đơn vị (unit testing) tập trung vào điều gì?",
            "options": [
                "Kiểm thử chức năng của các đối tượng hay các phương thức",
                "Kiểm thử giao diện người dùng",
                "Kiểm thử hiệu suất hệ thống",
                "Kiểm thử tính bảo mật"
            ],
            "correctAnswer": "Kiểm thử chức năng của các đối tượng hay các phương thức"
        },
        {
            "question": "Kiểm thử component (component testing) tập trung vào điều gì?",
            "options": [
                "Kiểm thử giao diện component",
                "Kiểm thử chức năng của các phương thức",
                "Kiểm thử tính bảo mật",
                "Kiểm thử giao diện người dùng"
            ],
            "correctAnswer": "Kiểm thử giao diện component"
        },
        {
            "question": "Kiểm thử hệ thống (system testing) tập trung vào điều gì?",
            "options": [
                "Kiểm thử tương tác giữa các component",
                "Kiểm thử giao diện người dùng",
                "Kiểm thử tính bảo mật",
                "Kiểm thử hiệu suất hệ thống"
            ],
            "correctAnswer": "Kiểm thử tương tác giữa các component"
        },
        {
            "question": "Kiểm thử tự động nên sử dụng gì để hỗ trợ kiểm thử đơn vị?",
            "options": [
                "Framework kiểm thử tự động (như JUnit)",
                "Các công cụ kiểm thử thủ công",
                "Phần mềm thiết kế giao diện",
                "Các chương trình bảo mật"
            ],
            "correctAnswer": "Framework kiểm thử tự động (như JUnit)"
        },
        {
            "question": "Mục tiêu của kiểm thử giao diện là gì?",
            "options": [
                "Tìm ra lỗi gây ra bởi các lỗi giao diện hoặc giả định sai về các giao diện",
                "Kiểm thử chức năng của các phương thức",
                "Kiểm thử hiệu suất hệ thống",
                "Kiểm thử tính bảo mật"
            ],
            "correctAnswer": "Tìm ra lỗi gây ra bởi các lỗi giao diện hoặc giả định sai về các giao diện"
        },
        {
            "question": "Một loại giao diện trong kiểm thử giao diện là gì?",
            "options": [
                "Giao diện có tham số",
                "Giao diện người dùng",
                "Giao diện hệ thống",
                "Giao diện bảo mật"
            ],
            "correctAnswer": "Giao diện có tham số"
        },
        {
            "question": "Kiểm thử phát triển là trách nhiệm của ai?",
            "options": [
                "Đội ngũ phát triển phần mềm",
                "Người dùng cuối",
                "Nhóm marketing",
                "Nhóm hỗ trợ khách hàng"
            ],
            "correctAnswer": "Đội ngũ phát triển phần mềm"
        },
        {
            "question": "Kiểm thử phát hành là gì?",
            "options": [
                "Kiểm thử hệ thống trước khi phát hành cho khách hàng",
                "Kiểm thử hệ thống sau khi phát hành cho khách hàng",
                "Kiểm thử hệ thống trong giai đoạn phát triển",
                "Kiểm thử hệ thống trong giai đoạn bảo trì"
            ],
            "correctAnswer": "Kiểm thử hệ thống trước khi phát hành cho khách hàng"
        },
        {
            "question": "Phương pháp kiểm thử hộp đen tập trung vào điều gì?",
            "options": [
                "Kiểm thử chức năng của hệ thống mà không cần biết cấu trúc bên trong",
                "Kiểm thử hiệu suất hệ thống",
                "Kiểm thử tính bảo mật",
                "Kiểm thử giao diện người dùng"
            ],
            "correctAnswer": "Kiểm thử chức năng của hệ thống mà không cần biết cấu trúc bên trong"
        },
        {
            "question": "Phương pháp kiểm thử hộp trắng tập trung vào điều gì?",
            "options": [
                "Kiểm thử cấu trúc bên trong của hệ thống",
                "Kiểm thử hiệu suất hệ thống",
                "Kiểm thử tính bảo mật",
                "Kiểm thử giao diện người dùng"
            ],
            "correctAnswer": "Kiểm thử cấu trúc bên trong của hệ thống"
        },
        {
            "question": "Phương pháp kiểm thử hộp xám là gì?",
            "options": [
                "Kết hợp giữa kiểm thử hộp đen và kiểm thử hộp trắng",
                "Kiểm thử hiệu suất hệ thống",
                "Kiểm thử tính bảo mật",
                "Kiểm thử giao diện người dùng"
            ],
            "correctAnswer": "Kết hợp giữa kiểm thử hộp đen và kiểm thử hộp trắng"
        },
        {
            "question": "Mục tiêu của kiểm thử validation là gì?",
            "options": [
                "Để chỉ ra rằng phần mềm thỏa mãn các yêu cầu đưa ra",
                "Để tìm ra các lỗi của phần mềm",
                "Để giảm chi phí phát triển",
                "Để tăng tốc độ lập trình"
            ],
            "correctAnswer": "Để chỉ ra rằng phần mềm thỏa mãn các yêu cầu đưa ra"
        },
        {
            "question": "Mục tiêu của kiểm thử defect là gì?",
            "options": [
                "Để tìm ra các tình huống mà phần mềm không hoạt động đúng như mong đợi",
                "Để chỉ ra rằng phần mềm thỏa mãn các yêu cầu đưa ra",
                "Để giảm chi phí phát triển",
                "Để làm hài lòng khách hàng"
            ],
            "correctAnswer": "Để tìm ra các tình huống mà phần mềm không hoạt động đúng như mong đợi"
        },
        {
            "question": "Tại sao cần kiểm tra kết quả của việc kiểm thử?",
            "options": [
                "Để tìm ra lỗi và các bất thường",
                "Để lưu trữ dữ liệu người dùng",
                "Để phân tích thị trường",
                "Để tăng tốc độ phát triển phần mềm"
            ],
            "correctAnswer": "Để tìm ra lỗi và các bất thường"
        },
        {
            "question": "Kiểm thử người dùng tập trung vào điều gì?",
            "options": [
                "Kiểm thử phần mềm bởi người dùng cuối",
                "Kiểm thử tính bảo mật",
                "Kiểm thử hiệu suất hệ thống",
                "Kiểm thử giao diện người dùng"
            ],
            "correctAnswer": "Kiểm thử phần mềm bởi người dùng cuối"
        },
        {
            "question": "Cải tiến quy trình phần mềm bao gồm gì?",
            "options": [
                "Cải tiến các phương pháp phát triển và kiểm thử phần mềm",
                "Tăng tốc độ lập trình",
                "Giảm chi phí phát triển",
                "Tập trung vào giao diện người dùng"
            ],
            "correctAnswer": "Cải tiến các phương pháp phát triển và kiểm thử phần mềm"
        },
        {
            "question": "Bảo trì phần mềm bao gồm gì?",
            "options": [
                "Sửa lỗi và nâng cấp phần mềm sau khi phát hành",
                "Thiết kế giao diện người dùng",
                "Viết tài liệu hướng dẫn",
                "Tạo lập báo cáo phân tích"
            ],
            "correctAnswer": "Sửa lỗi và nâng cấp phần mềm sau khi phát hành"
        },
        {
            "question": "Mục đích của việc kiểm thử bản release là gì?",
            "options": [
                "Để đảm bảo phần mềm hoạt động đúng như mong đợi trước khi phát hành",
                "Để giảm chi phí phát triển",
                "Để tăng tốc độ lập trình",
                "Để làm hài lòng khách hàng"
            ],
            "correctAnswer": "Để đảm bảo phần mềm hoạt động đúng như mong đợi trước khi phát hành"
        }
    ],
    "Tester": [
        {
            "question": "Lệnh nào sau đây đúng để thiết lập giá trị trả về của một đối tượng giả lập?",
            "options": [
                "onInvokeReturn()",
                "returnValue()",
                "returnWhenCalled()",
                "when().thenReturn()"
            ],
            "correctAnswer": "when().thenReturn()"
        },
        {
            "question": "JUnit chủ yếu được sử dụng để làm gì?",
            "options": [
                "Unit Test",
                "Debug",
                "Tích hợp liên tục",
                "Thiết kế test case"
            ],
            "correctAnswer": "Unit Test"
        },
        {
            "question": "Làm thế nào có thể mong đợi một ngoại lệ cụ thể được đưa ra trong 1 TestCase JUnit?",
            "options": [
                "Sử dụng annotation @ExpectException",
                "Sử dụng try-catch",
                "Sử dụng phương thức ExpectException trên đối tượng test",
                "Sử dụng phương thức assertThrows()"
            ],
            "correctAnswer": "Sử dụng phương thức assertThrows()"
        },
        {
            "question": "Annotation nào được sử dụng để chỉ ra một phương thức là phương thức test trong JUnit?",
            "options": ["@Testing", "@Testify", "@TestCase", "@Test"],
            "correctAnswer": "@Test"
        },
        {
            "question": "Hàm so khớp Hamcrest nào giống toán tử &&?",
            "options": ["all", "and", "anyOf", "allOf"],
            "correctAnswer": "allOf"
        },
        {
            "question": "Việc thực hiện các test case chức năng là một phần của ___",
            "options": [
                "Quá trình xác minh (verification)",
                "Quá trình báo cáo kết quả test",
                "Quá trình thiết kế cấp cao",
                "Quá trình xác nhận (validation)"
            ],
            "correctAnswer": "Quá trình xác nhận (validation)"
        },
        {
            "question": "Test case Selenium IDE có ba cột: command, target và value. Cột Target lưu trữ dữ liệu gì?",
            "options": [
                "Phần tử hoặc vị trí nơi lệnh được thực thi",
                "Kết quả thực hiện của 1 bước test",
                "Bước tiếp theo",
                "Mục đích của 1 bước test"
            ],
            "correctAnswer": "Phần tử hoặc vị trí nơi lệnh được thực thi"
        },
        {
            "question": "Hàm verify() của Mockito dùng để làm gì?",
            "options": [
                "So sánh kết quả thực tế với kết quả mong đợi",
                "Tạo đối tượng giả lập toàn phần",
                "Tạo đối tượng giả lập bán phần",
                "Xác minh 1 phương thức có được gọi hay không"
            ],
            "correctAnswer": "Xác minh 1 phương thức có được gọi hay không"
        },
        {
            "question": "Giả sử đối tượng giả lập objA có 1 phương thức f(). Lệnh nào sau đây đúng để xác định phương thức f() không được gọi?",
            "options": [
                "assert(objA.never()).f()",
                "verifyNoInteractions(objA)",
                "verifyNever(objA)",
                "assertNever(objA).f()"
            ],
            "correctAnswer": "verifyNoInteractions(objA)"
        },
        {
            "question": "Phát biểu nào phù hợp nhất cho kết quả mong đợi (expected result)?",
            "options": [
                "Chỉ được sử dụng trong test component",
                "Tốt nhất là giá trị khi thực thi chương trình",
                "Hữu ích nhất khi được xác định trước",
                "Chỉ quan trọng trong test hệ thống"
            ],
            "correctAnswer": "Hữu ích nhất khi được xác định trước"
        },
        {
            "question": "Phát biểu nào sau đây đúng với Unit test?",
            "options": [
                "Đó là việc xác nhận các thành phần đơn vị, được thực hiện bởi developer trong môi trường test",
                "Đó là việc xác nhận các thành phần đơn vị, được thực hiện bởi tester trong môi trường test",
                "Đó là việc xác nhận các thành phần đơn vị, được thực hiện bởi developer trong môi trường phát triển",
                "Đó là xác nhận giao diện (interface) giữa các thành phần đơn vị"
            ],
            "correctAnswer": "Đó là việc xác nhận các thành phần đơn vị, được thực hiện bởi developer trong môi trường phát triển"
        },
        {
            "question": "Phát biểu nào sau đây sai về test tĩnh?",
            "options": [
                "Test tĩnh có thể đưa ra các phép đo như độ phức tạp chu trình",
                "Test tĩnh yêu cầu phải chạy code",
                "Là quá trình review một tài liệu như test plan",
                "Là quá trình review source"
            ],
            "correctAnswer": "Test tĩnh yêu cầu phải chạy code"
        },
        {
            "question": "Sự khác biệt giữa lệnh assert và lệnh verify của Selenium IDE là gì?",
            "options": [
                "Lệnh assert không thành công sẽ dừng kiểm tra nhưng lệnh verify không thành công thì vẫn tiếp tục",
                "Lệnh verify không thành công sẽ dừng kiểm tra nhưng lệnh assert không thành công thì vẫn tiếp tục",
                "Lệnh verify ít phổ biến hơn các lệnh assert",
                "Lệnh assert ít phổ biến hơn các lệnh verify"
            ],
            "correctAnswer": "Lệnh assert không thành công sẽ dừng kiểm tra nhưng lệnh verify không thành công thì vẫn tiếp tục"
        },
        {
            "question": "Kiểm tra thời gian chờ là:",
            "options": [
                "Phụ thuộc vào phần mềm và phần cứng",
                "Phụ thuộc vào phần mềm",
                "Phụ thuộc vào phần cứng",
                "Độc lập với phần mềm và phần cứng"
            ],
            "correctAnswer": "Phụ thuộc vào phần mềm và phần cứng"
        },
        {
            "question": "Phát biểu nào sau đây đúng về phương thức thenReturn() trong Mockito?",
            "options": [
                "Nó được sử dụng để xác minh rằng một phương thức đã được gọi trên một đối tượng giả",
                "Nó được sử dụng để chỉ định giá trị trả về của một lệnh gọi phương thức trên một đối tượng giả",
                "Nó được sử dụng để tạo một đối tượng giả",
                "Nó không phải là một phương thức hợp lệ trong Mockito"
            ],
            "correctAnswer": "Nó được sử dụng để chỉ định giá trị trả về của một lệnh gọi phương thức trên một đối tượng giả"
        },
        {
            "question": "Trong test double, đối tượng stub khác với đối tượng mock như thế nào?",
            "options": [
                "Mock mô phỏng kết quả xử lý của một hành động còn stub được sử dụng để xác nhận một hành động có được thực hiện không",
                "Mock là đối tượng giả còn stub là đối tượng thật",
                "Stub mô phỏng kết quả xử lý của một hành động còn mock được sử dụng để xác nhận một hành động có được thực hiện không",
                "Stub là đối tượng giả còn mock là đối tượng thật"
            ],
            "correctAnswer": "Stub mô phỏng kết quả xử lý của một hành động còn mock được sử dụng để xác nhận một hành động có được thực hiện không"
        },
        {
            "question": "Phát biểu nào sau đây đúng về phương thức when() trong Mockito?",
            "options": [
                "Nó được sử dụng để xác minh rằng một phương thức đã được gọi trên một đối tượng giả",
                "Nó được sử dụng để ném một ngoại lệ khi một phương thức được gọi trên một đối tượng giả",
                "Nó được sử dụng để chỉ định hành vi của một lệnh gọi phương thức trên một đối tượng giả",
                "Nó được sử dụng để tạo một đối tượng giả"
            ],
            "correctAnswer": "Nó được sử dụng để chỉ định hành vi của một lệnh gọi phương thức trên một đối tượng giả"
        },
        {
            "question": "Phát biểu nào sau đây phù hợp cho khái niệm độ bao phủ?",
            "options": [
                "Chỉ áp dụng cho unit test, không áp dụng cho system test",
                "Là thước đo một phần của tính kỹ lưỡng của bài kiểm tra",
                "Độ bao phủ nhánh là bắt buộc đối với tất cả các phần mềm",
                "Khi nào đạt được độ bao phủ 100% thì việc kiểm thử hoàn thành"
            ],
            "correctAnswer": "Là thước đo một phần của tính kỹ lưỡng của bài kiểm tra"
        },
        {
            "question": "Phát biểu nào sau đây đúng về phương thức never() của Mockito?",
            "options": [
                "Nó được sử dụng để xác minh rằng một phương thức đã được gọi trên một đối tượng giả",
                "Nó được sử dụng để tạo một đối tượng giả",
                "Nó được sử dụng để xác minh rằng một phương thức không được gọi trên một đối tượng giả",
                "Nó được sử dụng để chỉ định hành vi của một lệnh gọi phương thức trên một đối tượng giả"
            ],
            "correctAnswer": "Nó được sử dụng để xác minh rằng một phương thức không được gọi trên một đối tượng giả"
        },
        {
            "question": "assertThat(1.03, is(closeTo(1.0, 0.03))) có kết quả là gì?",
            "options": ["false", "true", "error", "null"],
            "correctAnswer": "true"
        },
        {
            "question": "Hàm nào sau đây được sử dụng để tạo một phần mô phỏng với Mockito?",
            "options": [
                "spy()",
                "partialMock()",
                "halfMock()",
                "mockPartial()"
            ],
            "correctAnswer": "spy()"
        },
        {
            "question": "Cách nào sau đây dùng để tạo mới 1 đối tượng giả lập bằng Mockito?",
            "options": ["mock()", "createMock()", "new Mock()", "newMock()"],
            "correctAnswer": "mock()"
        },
        {
            "question": "Chọn phát biểu đúng cho Smoke testing?",
            "options": [
                "Nó được thực hiện sau khi quá trình test hệ thống kết thúc",
                "Nó là sự thay thế cho test hồi quy",
                "Nó là sự thay thế cho test chấp nhận",
                "Nó được thực hiện để đảm bảo hệ thống đã sẵn sàng trải qua quá trình kiểm tra chuyên sâu và nghiêm ngặt hơn"
            ],
            "correctAnswer": "Nó được thực hiện để đảm bảo hệ thống đã sẵn sàng trải qua quá trình kiểm tra chuyên sâu và nghiêm ngặt hơn"
        },
        {
            "question": "Điều quan trọng nhất về thiết kế kiểm thử sớm là:",
            "options": [
                "Không cần kiểm duyệt",
                "Sẽ tìm thấy tất cả các lỗi",
                "Làm cho việc chuẩn bị kiểm thử dễ dàng hơn",
                "Có thể ngăn chặn lỗi gia tăng"
            ],
            "correctAnswer": "Có thể ngăn chặn lỗi gia tăng"
        },
        {
            "question": "Mục đích của annotation @DisplayName trong JUnit là gì?",
            "options": [
                "Để chỉ định tên của test suite",
                "Đổi tên phương pháp thử trong thời gian chạy",
                "Đặt tên hiển thị tùy chỉnh cho phương pháp thử nghiệm",
                "Hiển thị tên người chạy thử"
            ],
            "correctAnswer": "Đặt tên hiển thị tùy chỉnh cho phương pháp thử nghiệm"
        },
        {
            "question": "Cú pháp đúng để truy cập giá trị của biến x trong Selenium IDE là gì?",
            "options": ["{x}", "x", "$x", "${x}"],
            "correctAnswer": "${x}"
        },
        {
            "question": "Phương thức nào được sử dụng trong JUnit để kiểm tra xem hai đối tượng có phải là cùng một thể hiện (instance) hay không?",
            "options": [
                "assertSameInstance()",
                "assertInstance()",
                "assertThat()",
                "sameInstance()"
            ],
            "correctAnswer": "assertThat()"
        },
        {
            "question": "Loại test nào được thực hiện để kiểm tra xem giao diện người dùng có dễ sử dụng không?",
            "options": [
                "White Box Testing",
                "Usability Testing",
                "Security Testing",
                "Unit Testing"
            ],
            "correctAnswer": "Usability Testing"
        },
        {
            "question": "Nguồn nào sau đây là nguồn tốt nhất về 'Kết quả mong đợi' cho các test case 'Kiểm thử chấp nhận' của người dùng?",
            "options": [
                "Đặc tả chương trình",
                "Đặc tả hệ thống",
                "Yêu cầu của người dùng",
                "Kết quả thực tế"
            ],
            "correctAnswer": "Yêu cầu của người dùng"
        },
        {
            "question": "Hàm assertTrue('message', A) làm gì?",
            "options": [
                "Khẳng định rằng điều kiện A là đúng",
                "Khẳng định rằng A chứa 'message'",
                "Khẳng định rằng điều kiện A là sai",
                "Khẳng định rằng 'message' = A"
            ],
            "correctAnswer": "Khẳng định rằng điều kiện A là đúng"
        },
        {
            "question": "Phát biểu nào sau đây đúng về annotation @Spy trong Mockito?",
            "options": [
                "Nó được sử dụng để tạo một đối tượng giả (mock)",
                "Nó được sử dụng để tạo một đối tượng giả một phần",
                "Nó được sử dụng để đưa các phần phụ thuộc vào một lớp kiểm tra",
                "Nó được sử dụng để xác minh rằng một phương thức đã được gọi trên một đối tượng giả"
            ],
            "correctAnswer": "Nó được sử dụng để tạo một đối tượng giả một phần"
        },
        {
            "question": "Phát biểu nào sau đây phù hợp nhất về kiểm thử?",
            "options": [
                "Mục tiêu / mục đích của kiểm thử là để chứng minh rằng chương trình hoạt động",
                "Mục đích của kiểm thử là để chứng minh rằng chương trình không có lỗi",
                "Mục đích của kiểm thử là để chứng minh rằng chương trình được thực hiện đúng phương pháp",
                "Kiểm thử là thực thi phần mềm nhằm mục đích tìm ra những khuyết điểm của phần mềm"
            ],
            "correctAnswer": "Kiểm thử là thực thi phần mềm nhằm mục đích tìm ra những khuyết điểm của phần mềm"
        },
        {
            "question": "Phủ lệnh và phủ nhánh có nghĩa là?",
            "options": [
                "Mỗi dòng lệnh đều được test",
                "Mọi câu lệnh và mọi nhánh đều được kiểm",
                "Tất cả các câu lệnh if đều được kiểm",
                "Đã kiểm tra mọi tổ hợp giá trị của câu lệnh IF trong chương trình"
            ],
            "correctAnswer": "Mọi câu lệnh và mọi nhánh đều được kiểm"
        },
        {
            "question": "Làm cách nào để đánh giá thời gian chạy của một phương thức trong JUnit?",
            "options": [
                "Sử dụng phương thức assertTimeout",
                "Sử dụng annotation @Speed",
                "Sử dụng phương thức assertSpeed",
                "Sử dụng phương thức Timeout"
            ],
            "correctAnswer": "Sử dụng phương thức assertTimeout"
        },
        {
            "question": "Cái nào sau đây là một CSS locator tương đương với XPath //div[@id=’example’)?",
            "options": [
                "css=div.example",
                "css=div#example",
                "css=div(@example",
                "css=div example"
            ],
            "correctAnswer": "css=div#example"
        },
        {
            "question": "Trường hợp nào sẽ là trường hợp kiểm thử chức năng cho hệ thống đặt chỗ trực tuyến?",
            "options": [
                "Kiểm tra cách hệ thống hoạt động khi số lượng lớn người dùng đang truy cập trang web",
                "Kiểm tra xem người dùng có thể đặt vé từ Mumbai đến Goa không",
                "Đo thời gian đáp ứng của hệ thống",
                "Đảm bảo người già cũng có thể sử dụng dễ dàng"
            ],
            "correctAnswer": "Kiểm tra xem người dùng có thể đặt vé từ Mumbai đến Goa không"
        },
        {
            "question": "Phát biểu nào sau đây đúng về các hoạt động 'verification' trong kiểm thử?",
            "options": [
                "Kiểm tra xem chúng ta đang xây dựng hệ thống có đúng không",
                "Kiểm tra xem chúng ta có đang xây dựng đúng hệ thống không",
                "Được thực hiện bởi một nhóm kiểm thử độc lập",
                "Đảm bảo rằng đó là điều người dùng thực sự muốn"
            ],
            "correctAnswer": "Kiểm tra xem chúng ta đang xây dựng hệ thống có đúng không"
        },
        {
            "question": "Một kỹ thuật kiểm thử phổ biến trong quá trình Unit test là:",
            "options": [
                "Kiểm tra độ phủ lệnh và phủ nhánh",
                "Đánh giá năng suất",
                "Kiểm tra tính khả dụng",
                "Kiểm tra tính bảo mật"
            ],
            "correctAnswer": "Kiểm tra độ phủ lệnh và phủ nhánh"
        },
        {
            "question": "Annotation nào xác định 1 phương thức test có tham số?",
            "options": [
                "@ParameterizedTest",
                "@DataDrivenTest",
                "@Parameters",
                "@TestWithParams"
            ],
            "correctAnswer": "@ParameterizedTest"
        },
        {
            "question": "Phát biểu nào sau đây đúng về quá trình xây dựng phần mềm theo hướng tiếp cận TDD?",
            "options": [
                "Trải qua 3 giai đoạn: test, code, retest",
                "Trải qua 2 giai đoạn: test trước, code sau",
                "Trải qua 3 giai đoạn: red, green, refactor",
                "Phải thực hiện việc test 2 lần để có ít bug"
            ],
            "correctAnswer": "Trải qua 3 giai đoạn: red, green, refactor"
        },
        {
            "question": "Phát biểu nào sau đây không phải là một trong những nguyên tắc của kiểm thử?",
            "options": [
                "Lỗi thường phân bố tập trung",
                "Kiểm thử càng sớm càng tốt",
                "Kiểm thử phải đạt được 100% độ bao phủ",
                "Nghịch lý thuốc trừ sâu"
            ],
            "correctAnswer": "Kiểm thử phải đạt được 100% độ bao phủ"
        },
        {
            "question": "Trong test double, đối tượng dummy khác với đối tượng fake như thế nào?",
            "options": [
                "Dummy là đối tượng giả lập, fake là một đối tượng thật nhưng giả đối tượng khác",
                "Hai đối tượng này không khác nhau",
                "Fake là đối tượng giả lập, dummy là một đối tượng thật nhưng giả đối tượng khác",
                "Fake là giả hành vi, dummy là giả kết quả"
            ],
            "correctAnswer": "Dummy là đối tượng giả lập, fake là một đối tượng thật nhưng giả đối tượng khác"
        },
        {
            "question": "Trình tự đúng của các giai đoạn kiểm thử phần mềm là:",
            "options": [
                "Đơn vị → Tích hợp → Hệ thống → Chấp nhận",
                "Hệ thống → Đơn vị → Tích hợp → Chấp nhận",
                "Tích hợp → Chấp nhận → Đơn vị → Hệ thống",
                "Đơn vị → Tích hợp → Chấp nhận → Hệ thống"
            ],
            "correctAnswer": "Đơn vị → Tích hợp → Hệ thống → Chấp nhận"
        },
        {
            "question": "Kiểm thử được thực hiện đầy đủ khi:",
            "options": [
                "Đạt độ tin cậy cần thiết được thiết lập trong test plan",
                "Người dùng hài lòng",
                "Hết thời gian",
                "Không tìm thấy lỗi nào nữa"
            ],
            "correctAnswer": "Đạt độ tin cậy cần thiết được thiết lập trong test plan"
        },
        {
            "question": "Làm thế nào để chỉ định một phương thức kiểm thử cụ thể sẽ bị bỏ qua trong quá trình thực thi?",
            "options": ["@Skip", "@IgnoreTest", "@Disabled", "@Avoid"],
            "correctAnswer": "@Disabled"
        }
    ],
    "Web": [
        {
            "question": "HTML là viết tắt của gì?",
            "options": [
                "Hyper Text Markup Language",
                "Home Tool Markup Language",
                "Hyperlinks and Text Markup Language",
                "Hyper Tool Multi Language"
            ],
            "correctAnswer": "Hyper Text Markup Language"
        }
    ]
}
